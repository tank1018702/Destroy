<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Destroy</name>
    </assembly>
    <members>
        <member name="M:Destroy.CreatGameObject.#ctor(System.UInt32,System.String,System.Type[])">
            <summary>
            creatOrder为0时脚本执行优先级最高, 然后向着数轴正方向递减。
            </summary>
        </member>
        <member name="M:Destroy.GameObject.#ctor">
            <summary>
            创建一个被Engine托管的新游戏物体
            </summary>
        </member>
        <member name="M:Destroy.GameObject.#ctor(System.String)">
            <summary>
            创建一个被Engine托管的新游戏物体
            </summary>
        </member>
        <member name="M:Destroy.GameObject.AddComponent``1">
            <summary>
            添加指定组件
            </summary>
        </member>
        <member name="M:Destroy.GameObject.RemoveComponent``1">
            <summary>
            移除指定组件
            </summary>
        </member>
        <member name="M:Destroy.GameObject.GetComponent``1">
            <summary>
            获取指定的类型
            </summary>
        </member>
        <member name="M:Destroy.GameObject.AddComponent``1(``0)">
            <summary>
            添加指定组件实例
            </summary>
        </member>
        <member name="M:Destroy.GameObject.GetComponents``1">
            <summary>
            获取所有指定的类型及其子类
            </summary>
        </member>
        <member name="M:Destroy.GameObject.Find(System.String)">
            <summary>
            根据名字寻找场景中一个游戏物体, 若有多个同名物体也只返回一个。
            </summary>
        </member>
        <member name="M:Destroy.GameObject.Destroy(Destroy.GameObject)">
            <summary>
            销毁一个游戏物体, 不会立马销毁, 会等到调用该方法的方法执行结束后进行销毁处理
            </summary>
        </member>
        <member name="P:Destroy.GameObject.GameObjectCount">
            <summary>
            获取游戏物体个数
            </summary>
        </member>
        <member name="F:Destroy.Graphics.CoordinateType.Normal">
            <summary>
            right X, up Y
            </summary>
        </member>
        <member name="F:Destroy.Graphics.CoordinateType.Window">
            <summary>
            right x, down Y
            </summary>
        </member>
        <member name="T:Destroy.Graphics.RendererSystem">
            <summary>
            渲染系统
            </summary>
        </member>
        <member name="M:Destroy.Graphics.RendererSystem.RenderBlock(Destroy.Graphics.Block)">
            <summary>
            在控制台缓冲区上渲染一个Block
            </summary>
        </member>
        <member name="M:Destroy.Graphics.RendererSystem.RenderBlockBuffer(Destroy.Graphics.Block,Destroy.Graphics.Block@)">
            <summary>
            在控制台缓冲区上利用双缓冲技术渲染一个Block
            </summary>
        </member>
        <member name="M:Destroy.Graphics.RendererSystem.MaskCulling(Destroy.Graphics.Block,System.String[0:,0:],System.String)">
            <summary>
            在Block上叠加一层相同大小的Mask，根据maskStr指定Block中哪些item需要被替换为maskStr。
            </summary>
        </member>
        <member name="M:Destroy.Graphics.RendererSystem.OcclusionCulling(Destroy.Graphics.Block,Destroy.Graphics.Block)">
            <summary>
            在一个Block上进行一个新的Block的渲染。
            </summary>
        </member>
        <member name="M:Destroy.Graphics.RendererSystem.BlockCutting(Destroy.Graphics.Block,Destroy.Graphics.Block@)">
            <summary>
            在一个Block上截取出指定cutBlock。
            </summary>
        </member>
        <member name="T:Destroy.KeyCode">
            <summary>
            键盘按键(104键)
            </summary>
        </member>
        <member name="T:Destroy.Input">
            <summary>
            输入类 <see langword="static"/>
            </summary>
        </member>
        <member name="P:Destroy.Input.LastInputKey">
            <summary>
            上一次按下的键
            </summary>
        </member>
        <member name="P:Destroy.Input.LastDropKey">
            <summary>
            上一次松开的键
            </summary>
        </member>
        <member name="M:Destroy.Input.GetKey(Destroy.KeyCode)">
            <summary>
            获取持续的按键输入
            </summary>
        </member>
        <member name="M:Destroy.Input.GetKeyDown(Destroy.KeyCode)">
            <summary>
            获取按下指定按键
            </summary>
        </member>
        <member name="M:Destroy.Input.GetKeyUp(Destroy.KeyCode)">
            <summary>
            获取松开指定按键
            </summary>
        </member>
        <member name="M:Destroy.Input.GetDirectInput(Destroy.KeyCode,Destroy.KeyCode)">
            <summary>
            获取指定方向上的输入
            </summary>
        </member>
        <member name="M:Destroy.Input.GetCurrentKey">
            <summary>
            获取当前按下的键
            </summary>
        </member>
    </members>
</doc>
